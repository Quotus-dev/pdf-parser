version: '3.9'
services:
  db:
    image: postgres:16
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - mjunction
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mjunction
    logging:
      driver: none
      
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    ports:
      - "1001:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@root.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
    logging:
      driver: none

  client:
    build:
      context: './client'
      dockerfile: Dockerfile
    ports:
      - 5173:5173
    container_name: client
    networks:
      - mjunction
    volumes:
     - type: bind
       source: ./client
       target: /app
    depends_on:
      - db
      - server
  server:
    build:
      context: './server'
      dockerfile: Dockerfile
    ports:
      - 5050:5050
    container_name: server
    networks:
      - mjunction
    environment:
      - POSTGRES_DB=mjunction
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - PORT=5050
    depends_on:
      - db
    volumes:
    - ./server:/app
    - outPutPath:/app/output
    - uploadPath:/app/uploads

  pyserver:
    build:
      context: './python'
      dockerfile: Dockerfile
    restart: always
    environment:
      - FLASK_ENV=development
      - POSTGRES_DB=mjunction
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=admin
    ports:
      - 5151:5151
    container_name: py-server
    networks:
      - mjunction
    depends_on:
      - db
    volumes:
    - ./python:/app
    - outPutPath:/app/output
    - uploadPath:/app/uploads
networks:
  mjunction:
    driver: bridge

volumes:
  data:
  outPutPath:
  uploadPath:
  pgadmin-data:
    
